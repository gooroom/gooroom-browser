From e322f42774fe9e220192f1824865f063fc0fd6a7 Mon Sep 17 00:00:00 2001
From: junsungc <junsungc@gooroom.kr>
Date: Mon, 27 Jul 2020 11:59:22 +0900
Subject: [PATCH 39/71] change chrome to gooroom scheme on error page [Gooroom
 Bug Tracking System - 0000400] change chrome to gooroom scheme on
 content-settings bubble model

---
 .../ui/content_settings/content_setting_bubble_model.cc  | 9 +++++++++
 components/error_page/common/localized_error.cc          | 9 +++++++++
 2 files changed, 18 insertions(+)

diff --git a/chrome/browser/ui/content_settings/content_setting_bubble_model.cc b/chrome/browser/ui/content_settings/content_setting_bubble_model.cc
index 310d625729de..b2c914e552f9 100644
--- a/chrome/browser/ui/content_settings/content_setting_bubble_model.cc
+++ b/chrome/browser/ui/content_settings/content_setting_bubble_model.cc
@@ -9,6 +9,7 @@
 #include <memory>
 #include <utility>
 
+#include "gooroom/URLRewrite/gooroom_url_rewrite.h"
 #include "base/bind.h"
 #include "base/command_line.h"
 #include "base/feature_list.h"
@@ -624,7 +625,15 @@ bool ContentSettingSingleRadioGroup::settings_changed() const {
 // content type and setting the default value based on the content setting.
 void ContentSettingSingleRadioGroup::SetRadioGroup() {
   const GURL& url = web_contents()->GetURL();
+#if defined(GOOROOM_BUILD)
+// change chrome:// to gooroom:// on content-setting-bubble-popup.
+  GURL changed_url = GooroomURLRewrite::ChangeGooroomScheme(url);
+  base::string16 display_host = url_formatter::FormatUrlForSecurityDisplay(changed_url);
+  if (display_host.empty())
+    display_host = base::ASCIIToUTF16(changed_url.spec());
+#else
   base::string16 display_host = url_formatter::FormatUrlForSecurityDisplay(url);
+#endif
 
   PageSpecificContentSettings* content_settings =
       PageSpecificContentSettings::GetForFrame(web_contents()->GetMainFrame());
diff --git a/components/error_page/common/localized_error.cc b/components/error_page/common/localized_error.cc
index 76eac75d891d..b34098f4ff5f 100644
--- a/components/error_page/common/localized_error.cc
+++ b/components/error_page/common/localized_error.cc
@@ -9,6 +9,7 @@
 #include <memory>
 #include <utility>
 
+#include "gooroom/URLRewrite/gooroom_url_rewrite.h"
 #include "base/check_op.h"
 #include "base/command_line.h"
 #include "base/i18n/rtl.h"
@@ -946,9 +947,17 @@ LocalizedError::PageState LocalizedError::GetPageState(
     options.suggestions &= ~SUGGEST_LEARNMORE;
   }
 
+#if defined(GOOROOM_BUILD)
+//Change chrome:// to gooroom:// on error pages
+  GURL changed_failed_url = GooroomURLRewrite::ChangeGooroomScheme(failed_url);
+  base::string16 failed_url_string(url_formatter::FormatUrl(
+      changed_failed_url, url_formatter::kFormatUrlOmitNothing,
+      net::UnescapeRule::NORMAL, nullptr, nullptr, nullptr));
+#else
   base::string16 failed_url_string(url_formatter::FormatUrl(
       failed_url, url_formatter::kFormatUrlOmitNothing,
       net::UnescapeRule::NORMAL, nullptr, nullptr, nullptr));
+#endif
   // URLs are always LTR.
   if (base::i18n::IsRTL())
     base::i18n::WrapStringWithLTRFormatting(&failed_url_string);
-- 
2.20.1

