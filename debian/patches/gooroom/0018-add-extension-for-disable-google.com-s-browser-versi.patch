From fd2c8659cb9d3f07b6b25fc28b49ec7d124cd69b Mon Sep 17 00:00:00 2001
From: junsungc <junsungc@gooroom.kr>
Date: Thu, 4 Jun 2020 15:43:27 +0900
Subject: [PATCH 18/79] add extension for disable google.com's browser version 
 warning

---
 chrome/browser/browser_resources.grd          |  3 ++
 .../whitelist.cc                              |  3 ++
 chrome/browser/extensions/component_loader.cc |  8 +++++
 .../component_extension_resources.grd         |  3 ++
 chrome/browser/resources/dgw/inject.css       |  6 ++++
 chrome/browser/resources/dgw/manifest.json    | 14 +++++++++
 extensions/common/constants.cc                |  3 ++
 extensions/common/constants.h                 |  5 ++++
 gooroom/browser/BUILD.gn                      |  2 ++
 gooroom/browser/dgw/disable_google_warning.cc | 29 +++++++++++++++++++
 gooroom/browser/dgw/disable_google_warning.h  | 19 ++++++++++++
 11 files changed, 95 insertions(+)
 create mode 100644 chrome/browser/resources/dgw/inject.css
 create mode 100644 chrome/browser/resources/dgw/manifest.json
 create mode 100644 gooroom/browser/dgw/disable_google_warning.cc
 create mode 100644 gooroom/browser/dgw/disable_google_warning.h

diff --git a/chrome/browser/browser_resources.grd b/chrome/browser/browser_resources.grd
index 1deaa699ca4d..8c0ccee44585 100644
--- a/chrome/browser/browser_resources.grd
+++ b/chrome/browser/browser_resources.grd
@@ -203,6 +203,9 @@
       <include name="IDR_MEMORY_INTERNALS_JS" file="resources\memory_internals\memory_internals.js" type="BINDATA" compress="gzip" />
       <if expr="enable_plugins">
         <include name="IDR_PDF_MANIFEST" file="resources\pdf\manifest.json" type="BINDATA" />
+        <if expr="_gooroom">
+          <include name="IDR_DGW_MANIFEST" file="resources\dgw\manifest.json" type="BINDATA" />
+        </if>
       </if>
       <if expr="is_win">
         <include name="IDR_PLUGIN_DB_JSON" file="resources\plugin_metadata\plugins_win.json" type="BINDATA" />
diff --git a/chrome/browser/extensions/component_extensions_whitelist/whitelist.cc b/chrome/browser/extensions/component_extensions_whitelist/whitelist.cc
index 5b98694d717c..48b3dd2ec61d 100644
--- a/chrome/browser/extensions/component_extensions_whitelist/whitelist.cc
+++ b/chrome/browser/extensions/component_extensions_whitelist/whitelist.cc
@@ -29,6 +29,9 @@ bool IsComponentExtensionWhitelisted(const std::string& extension_id) {
     extension_misc::kInAppPaymentsSupportAppId,
     extension_misc::kMediaRouterStableExtensionId,
     extension_misc::kPdfExtensionId,
+#if defined(GOOROOM_BUILD)
+    extension_misc::kDgwExtensionId,
+#endif
 #if defined(OS_CHROMEOS)
     extension_misc::kAssessmentAssistantExtensionId,
     extension_misc::kAutoclickExtensionId,
diff --git a/chrome/browser/extensions/component_loader.cc b/chrome/browser/extensions/component_loader.cc
index a881e3bead9c..ca7683c6e6ac 100644
--- a/chrome/browser/extensions/component_loader.cc
+++ b/chrome/browser/extensions/component_loader.cc
@@ -68,6 +68,10 @@
 #include "chrome/browser/defaults.h"
 #endif
 
+#if defined(GOOROOM_BUILD)
+#include "gooroom/browser/dgw/disable_google_warning.h"
+#endif
+
 using content::BrowserThread;
 
 namespace extensions {
@@ -491,6 +495,10 @@ void ComponentLoader::AddDefaultComponentExtensionsForKioskMode(
 #if BUILDFLAG(ENABLE_PDF)
   Add(pdf_extension_util::GetManifest(),
       base::FilePath(FILE_PATH_LITERAL("pdf")));
+#if defined(GOOROOM_BUILD)
+  Add(disable_google_warning::GetManifest(),
+      base::FilePath(FILE_PATH_LITERAL("dgw")));
+#endif
 #endif
 }
 
diff --git a/chrome/browser/resources/component_extension_resources.grd b/chrome/browser/resources/component_extension_resources.grd
index b25e2d366cfc..414d703bc02d 100644
--- a/chrome/browser/resources/component_extension_resources.grd
+++ b/chrome/browser/resources/component_extension_resources.grd
@@ -132,6 +132,9 @@
         <include name="IDR_PDF_VIEWER_TOOLBAR_DROPDOWN_JS" file="${root_gen_dir}/chrome/browser/resources/pdf/elements/viewer-toolbar-dropdown.js" use_base_dir="false" type="BINDATA" />
         <include name="IDR_PDF_VIEWER_ZOOM_BUTTON_JS" file="${root_gen_dir}/chrome/browser/resources/pdf/elements/viewer-zoom-button.js" use_base_dir="false" type="BINDATA" />
         <include name="IDR_PDF_VIEWER_ZOOM_SELECTOR_JS" file="${root_gen_dir}/chrome/browser/resources/pdf/elements/viewer-zoom-toolbar.js" use_base_dir="false" type="BINDATA" />
+        <if expr="_gooroom">
+          <include name="IDR_DGW_INJECT_CSS" file="dgw/inject.css" allowexternalscript="true" type="BINDATA" />
+        </if>
       </if>
       <include name="IDR_CRYPTOTOKEN_UTIL_JS" file="cryptotoken/util.js" type="BINDATA" />
       <include name="IDR_CRYPTOTOKEN_B64_JS" file="cryptotoken/b64.js" type="BINDATA" />
diff --git a/chrome/browser/resources/dgw/inject.css b/chrome/browser/resources/dgw/inject.css
new file mode 100644
index 000000000000..10894976cc58
--- /dev/null
+++ b/chrome/browser/resources/dgw/inject.css
@@ -0,0 +1,6 @@
+.og-pdp, .gb_Xc.gb_g {
+  display: none;
+  visibility: hidden;
+  opacity: 0;
+  user-select: none;
+}
\ No newline at end of file
diff --git a/chrome/browser/resources/dgw/manifest.json b/chrome/browser/resources/dgw/manifest.json
new file mode 100644
index 000000000000..0f4b1e504496
--- /dev/null
+++ b/chrome/browser/resources/dgw/manifest.json
@@ -0,0 +1,14 @@
+{
+  "key": "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAod2RzIEs9MCMNZ71j0JJKQ2jX3u5YhmkjMzlvvRnAKrpT5KTdpSs7XtqgM88KExQsMPPw0RoyoEBQL9fOPdiajZGYKMimcGFHdYNCB2BNASgkkD+5c6EefLrG2M/+//uL8HcBQ2pftRaAz3gkbeZUgu5xZp3ZTnl3YhYgUTrXvC1Ny3mWVDopWfR39ftYpLNkdGvtMlR/at6mi/qvS93b1ptnVMjqUBHTyW+jSNCsUk2YdGCpi3QsVFkJbqml9qX18uIqNyH2Ti3V3bI109rbd2i6fHrBaKYHWsfTZAQ0v3ijLDhDC+KvDN34R2NP83IwfFaUlVbzqsMQHzYlcvGpwIDAQAB",
+  "name": "<NAME>",
+  "description" : "",
+  "version" : "1.0",
+  "manifest_version" : 2,
+  "content_scripts" : [
+    {
+      "matches" : [ "https://*.google.com/*" ],
+      "css" : [ "inject.css" ]
+    }
+  ]
+}
+
diff --git a/extensions/common/constants.cc b/extensions/common/constants.cc
index 9bb3c5704bc9..3e479bb3ce7b 100644
--- a/extensions/common/constants.cc
+++ b/extensions/common/constants.cc
@@ -106,6 +106,9 @@ const char kChromeVoxExtensionId[] = "kgejglhpjiefppelpmljglcjbhoiplfn";
 #endif
 const char kFeedbackExtensionId[] = "gfdkimpbcpahaombhbimeihdjnejgicl";
 const char kPdfExtensionId[] = "mhjfbmdgcfjbbpaeojofohoefgiehjai";
+#if defined(GOOROOM_BUILD)
+const char kDgwExtensionId[] = "ppjhjgbbllkfebjommlcojifooeihdoh";
+#endif
 const char kQuickOfficeComponentExtensionId[] =
     "bpmcpldpdmajfigpchkicefoigmkfalc";
 const char kQuickOfficeInternalExtensionId[] =
diff --git a/extensions/common/constants.h b/extensions/common/constants.h
index ba486054903c..b4390b00f0cd 100644
--- a/extensions/common/constants.h
+++ b/extensions/common/constants.h
@@ -180,6 +180,11 @@ extern const char kFeedbackExtensionId[];
 // The extension id of the PDF extension.
 extern const char kPdfExtensionId[];
 
+#if defined(GOOROOM_BUILD)
+// The extension id of the DGW extension.
+extern const char kDgwExtensionId[];
+#endif
+
 // The extension id of the Office Viewer component extension.
 extern const char kQuickOfficeComponentExtensionId[];
 
diff --git a/gooroom/browser/BUILD.gn b/gooroom/browser/BUILD.gn
index 57f5f21afd23..920dfedf3d21 100644
--- a/gooroom/browser/BUILD.gn
+++ b/gooroom/browser/BUILD.gn
@@ -17,6 +17,8 @@ static_library("gooroom_browser") {
     "gooroom_pref.h",
     "gooroom_url_filter_impl.cc",
     "gooroom_url_filter_impl.h",
+    "dgw/disable_google_warning.cc",
+    "dgw/disable_google_warning.h",
   ]
 
   deps = [
diff --git a/gooroom/browser/dgw/disable_google_warning.cc b/gooroom/browser/dgw/disable_google_warning.cc
new file mode 100644
index 000000000000..93b4b33dc1a4
--- /dev/null
+++ b/gooroom/browser/dgw/disable_google_warning.cc
@@ -0,0 +1,29 @@
+// Copyright 2015 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#include "gooroom/browser/dgw/disable_google_warning.h"
+
+#include "base/strings/string_util.h"
+#include "chrome/grit/browser_resources.h"
+#include "ui/base/resource/resource_bundle.h"
+
+namespace disable_google_warning {
+
+namespace {
+
+// Tags in the manifest to be replaced.
+const char kNameTag[] = "<NAME>";
+
+}  // namespace
+
+std::string GetManifest() {
+  std::string manifest_contents = ui::ResourceBundle::GetSharedInstance()
+                                      .GetRawDataResource(IDR_DGW_MANIFEST)
+                                      .as_string();
+  DCHECK(manifest_contents.find(kNameTag) != std::string::npos);
+
+  return manifest_contents;
+}
+
+}  // namespace disable_google_warning
\ No newline at end of file
diff --git a/gooroom/browser/dgw/disable_google_warning.h b/gooroom/browser/dgw/disable_google_warning.h
new file mode 100644
index 000000000000..b10a3fee18bf
--- /dev/null
+++ b/gooroom/browser/dgw/disable_google_warning.h
@@ -0,0 +1,19 @@
+// Copyright 2015 The Chromium Authors. All rights reserved.
+// Use of this source code is governed by a BSD-style license that can be
+// found in the LICENSE file.
+
+#ifndef CHROME_BROWSER_DGW_DISABLE_GOOGLE_WARNING_H_
+#define CHROME_BROWSER_DGW_DISABLE_GOOGLE_WARNING_H_
+
+#include <string>
+
+namespace disable_google_warning {
+
+// Return the extensions manifest for DGW. The manifest is loaded from
+// browser_resources.grd and certain fields are replaced based on what chrome
+// flags are enabled.
+std::string GetManifest();
+
+}  // namespace disable_google_warning
+
+#endif  // CHROME_BROWSER_DGW_DISABLE_GOOGLE_WARNING_H_
\ No newline at end of file
-- 
2.20.1

