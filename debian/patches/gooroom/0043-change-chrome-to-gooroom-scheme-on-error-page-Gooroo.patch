From da43170fe7864caf91420e2dcbbc3046e07f23de Mon Sep 17 00:00:00 2001
From: junsungc <junsungc@gooroom.kr>
Date: Fri, 5 Jun 2020 11:42:08 +0900
Subject: [PATCH 43/79] change chrome to gooroom scheme on error page [Gooroom 
 Bug Tracking System - 0000400] change chrome to gooroom scheme on 
 content-settings bubble model

---
 .../content_settings/content_setting_bubble_model.cc   |  9 +++++++++
 components/error_page/common/localized_error.cc        | 10 ++++++++++
 2 files changed, 19 insertions(+)

diff --git a/chrome/browser/ui/content_settings/content_setting_bubble_model.cc b/chrome/browser/ui/content_settings/content_setting_bubble_model.cc
index 5f600f81d7bb..57c125b558cb 100644
--- a/chrome/browser/ui/content_settings/content_setting_bubble_model.cc
+++ b/chrome/browser/ui/content_settings/content_setting_bubble_model.cc
@@ -9,6 +9,7 @@
 #include <memory>
 #include <utility>
 
+#include "gooroom/URLRewrite/gooroom_url_rewrite.h"
 #include "base/bind.h"
 #include "base/command_line.h"
 #include "base/feature_list.h"
@@ -775,7 +776,15 @@ bool ContentSettingSingleRadioGroup::settings_changed() const {
 // content type and setting the default value based on the content setting.
 void ContentSettingSingleRadioGroup::SetRadioGroup() {
   const GURL& url = web_contents()->GetURL();
+#if defined(GOOROOM_BUILD)
+// change chrome:// to gooroom:// on content-setting-bubble-popup.
+  GURL changed_url = GooroomURLRewrite::ChangeGooroomScheme(url);
+  base::string16 display_host = url_formatter::FormatUrlForSecurityDisplay(changed_url);
+  if (display_host.empty())
+    display_host = base::ASCIIToUTF16(changed_url.spec());
+#else
   base::string16 display_host = url_formatter::FormatUrlForSecurityDisplay(url);
+#endif
 
   TabSpecificContentSettings* content_settings =
       TabSpecificContentSettings::FromWebContents(web_contents());
diff --git a/components/error_page/common/localized_error.cc b/components/error_page/common/localized_error.cc
index 17848be4d02b..d887bed951d2 100644
--- a/components/error_page/common/localized_error.cc
+++ b/components/error_page/common/localized_error.cc
@@ -9,6 +9,7 @@
 #include <memory>
 #include <utility>
 
+#include "gooroom/URLRewrite/gooroom_url_rewrite.h"
 #include "base/command_line.h"
 #include "base/i18n/rtl.h"
 #include "base/logging.h"
@@ -905,9 +906,18 @@ LocalizedError::PageState LocalizedError::GetPageState(
     options.buttons = SHOW_BUTTON_RELOAD;
   }
 
+#if defined(GOOROOM_BUILD)
+//Change chrome:// to gooroom:// on error pages
+  GURL changed_failed_url = GooroomURLRewrite::ChangeGooroomScheme(failed_url);
+  base::string16 failed_url_string(url_formatter::FormatUrl(
+      changed_failed_url, url_formatter::kFormatUrlOmitNothing,
+      net::UnescapeRule::NORMAL, nullptr, nullptr, nullptr));
+#else
   base::string16 failed_url_string(url_formatter::FormatUrl(
       failed_url, url_formatter::kFormatUrlOmitNothing,
       net::UnescapeRule::NORMAL, nullptr, nullptr, nullptr));
+#endif
+
   // URLs are always LTR.
   if (base::i18n::IsRTL())
     base::i18n::WrapStringWithLTRFormatting(&failed_url_string);
-- 
2.20.1

