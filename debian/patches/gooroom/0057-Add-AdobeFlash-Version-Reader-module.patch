From c8fcfbd7385c9b34e24ab003f3852d4d7f9278b6 Mon Sep 17 00:00:00 2001
From: junsungc <junsungc@gooroom.kr>
Date: Mon, 27 Jul 2020 14:17:56 +0900
Subject: [PATCH 57/88] Add AdobeFlash-Version Reader module

---
 .../browser/web_contents/web_contents_impl.cc |  6 ++--
 gooroom/BUILD.gn                              |  3 ++
 gooroom/browser/gooroom_pref.cc               | 15 +++++---
 gooroom/flash/flash_version.cc                | 35 +++++++++++++++++++
 gooroom/flash/flash_version.h                 | 13 +++++++
 5 files changed, 64 insertions(+), 8 deletions(-)
 create mode 100644 gooroom/flash/flash_version.cc
 create mode 100644 gooroom/flash/flash_version.h

diff --git a/content/browser/web_contents/web_contents_impl.cc b/content/browser/web_contents/web_contents_impl.cc
index c3a832b6e243..d977acc425b3 100644
--- a/content/browser/web_contents/web_contents_impl.cc
+++ b/content/browser/web_contents/web_contents_impl.cc
@@ -4523,9 +4523,7 @@ bool RequestCurrentUserDataDir(GURL url) {
       "--user-data-dir=" + home_path_dir.AsUTF8Unsafe() +
       "/.config/gooroom/untrust";
 
-  //TODO need to get the flash version dynamically.
   std::string flash_dir = "--ppapi-flash-path=/usr/lib/adobe-flashplugin/libpepflashplayer.so";
-  std::string flash_version = "--ppapi-flash-version=31.0.0.153";
 
   int pid;
   //TODO do not discard other options when exec
@@ -4535,7 +4533,7 @@ bool RequestCurrentUserDataDir(GURL url) {
       return true;  // true is blank.. false is continue.
     } else {
       execl(exe_path.c_str(), "gooroom-browser",
-            trust_user_data_dir_option.c_str(), flash_dir.c_str(), flash_version.c_str(), url.spec().c_str(), NULL);
+            trust_user_data_dir_option.c_str(), flash_dir.c_str(), url.spec().c_str(), NULL);
       exit(0);
     }
   } else {
@@ -4544,7 +4542,7 @@ bool RequestCurrentUserDataDir(GURL url) {
       return true;
     } else {
       execl(exe_path.c_str(), "gooroom-browser",
-            untrust_user_data_dir_option.c_str(), flash_dir.c_str(), flash_version.c_str(), url.spec().c_str(), NULL);
+            untrust_user_data_dir_option.c_str(), flash_dir.c_str(), url.spec().c_str(), NULL);
       exit(0);
     }
   }
diff --git a/gooroom/BUILD.gn b/gooroom/BUILD.gn
index 107458ed6843..08e6e3413bbf 100644
--- a/gooroom/BUILD.gn
+++ b/gooroom/BUILD.gn
@@ -256,6 +256,9 @@ if (!is_android && !is_mac) {
         # for commit #18
         "content/gooroom_safety_policy_part.cc",
         "content/gooroom_safety_policy_part.h",
+
+        "flash/flash_version.h",
+        "flash/flash_version.cc",
       ]
     }
   }
diff --git a/gooroom/browser/gooroom_pref.cc b/gooroom/browser/gooroom_pref.cc
index a288d46ce67a..e962b01f0c52 100644
--- a/gooroom/browser/gooroom_pref.cc
+++ b/gooroom/browser/gooroom_pref.cc
@@ -2,6 +2,7 @@
 
 #include "gooroom/base/gooroom_base.h"
 #include "gooroom/browser/gooroom_url_filter_impl.h"
+#include "gooroom/flash/flash_version.h"
 
 #include "base/command_line.h"
 #include "base/path_service.h"
@@ -86,9 +87,7 @@ void GooroomPref::setup() {
   std::string untrust_user_data_dir_option =
       "--user-data-dir=" + home_path_dir.AsUTF8Unsafe() +
       "/.config/gooroom/untrust";
-  //TODO need to get the flash version dynamically.
   std::string flash_dir = "--ppapi-flash-path=/usr/lib/adobe-flashplugin/libpepflashplayer.so";
-  std::string flash_version = "--ppapi-flash-version=31.0.0.153";
 
   bool use_user_data_dir = false;
   for (base::CommandLine::StringVector::const_iterator it = argv.begin();
@@ -116,7 +115,7 @@ void GooroomPref::setup() {
           exit(0);
         } else {
           execl(exe_path.c_str(), "gooroom-browser",
-                trust_user_data_dir_option.c_str(), flash_dir.c_str(), flash_version.c_str(), GURL(*it).spec().c_str(),
+                trust_user_data_dir_option.c_str(), flash_dir.c_str(), GURL(*it).spec().c_str(),
                 NULL);
           exit(0);
         }
@@ -126,7 +125,7 @@ void GooroomPref::setup() {
           exit(0);
         } else {
           execl(exe_path.c_str(), "gooroom-browser",
-                untrust_user_data_dir_option.c_str(),flash_dir.c_str(), flash_version.c_str(), GURL(*it).spec().c_str(),
+                untrust_user_data_dir_option.c_str(),flash_dir.c_str(), GURL(*it).spec().c_str(),
                 NULL);
           exit(0);
         }
@@ -145,6 +144,14 @@ void GooroomPref::setup() {
     exit(0);
   }
   // test args
+
+  //Add Flash version
+  if(base::CommandLine::ForCurrentProcess()->HasSwitch(switches::kPpapiFlashPath))
+  {
+    std::string flashVersion = FlashVersion::GetFlashVersion();
+    if(!flashVersion.empty())
+      base::CommandLine::ForCurrentProcess()->AppendSwitchASCII(switches::kPpapiFlashVersion, flashVersion);
+  }
 }
 
 bool GooroomPref::useWebSocket() {
diff --git a/gooroom/flash/flash_version.cc b/gooroom/flash/flash_version.cc
new file mode 100644
index 000000000000..2e9dbf3a7e8d
--- /dev/null
+++ b/gooroom/flash/flash_version.cc
@@ -0,0 +1,35 @@
+#include "flash_version.h"
+
+//Get version number from adobe-flashplugin manifest.json file.
+//Return flash version number.
+std::string FlashVersion::GetFlashVersion()
+{
+  std::string line = "";
+  std::ifstream flash_manifest_json("/usr/lib/adobe-flashplugin/manifest.json");
+  if (flash_manifest_json.is_open())
+  {
+    while ( getline (flash_manifest_json, line ))
+    {
+      if(line.find("version") != std::string::npos ){
+        char * stoc = new char[line.size() + 1];
+        std::copy(line.begin(), line.end(), stoc);
+        stoc[line.size()] = '\0';
+        char* findAt;
+        findAt = strchr(stoc, '\"');
+        int i = 0;
+        int a=0, b=0;
+        while( findAt != NULL ) {
+          findAt = strchr(findAt + 1, '\"');
+          if(i==1)
+            a= findAt - stoc + 1;
+          if(i==2)
+            b= findAt - stoc + 1;
+          i++;
+        }
+        flash_manifest_json.close();
+        return line.substr(a, b-a-1);
+      }
+    }
+  }
+  return line;
+}
diff --git a/gooroom/flash/flash_version.h b/gooroom/flash/flash_version.h
new file mode 100644
index 000000000000..31e72b7c0fab
--- /dev/null
+++ b/gooroom/flash/flash_version.h
@@ -0,0 +1,13 @@
+#ifndef FLASH_VERSION_H_
+#define FLASH_VERSION_H_
+
+#include <iostream>
+#include <fstream>
+#include <string.h>
+
+class FlashVersion {
+ public:
+  static std::string GetFlashVersion();
+};
+
+#endif  // FLASH_VERSION_H_
-- 
2.20.1

