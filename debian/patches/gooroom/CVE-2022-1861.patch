From 9215aa878a6807559afcd9dacdf056151d24a1e1 Mon Sep 17 00:00:00 2001
From: Pu Shi <pushi@google.com>
Date: Thu, 26 May 2022 12:30:34 +0000
Subject: [PATCH] Fix use-after-free bug caused by use of
 base::Unretained(this)

The base::Unretained(this) is being used in the ScheduledExecutor to
bind callbacks to a SequencedTaskRunner, which causes use-after-free
bug. By adding a separate WeakPtrFactory, it ensures the pointer to
the object gets invalidated before invoking callback function in the
task runner.

(cherry picked from commit 85d5e104eaa7f75f4bd905629381a5898f2f1f7f)

(cherry picked from commit 2254445512d7389d5c4377b67b5005e3f01ce8a8)

Fixed: 1316846
TEST: manully tested with DCHECKs enabled and passed unit tests.
Change-Id: Id11f404779336a22a718f4c5b6a3cb88f80bdfb1
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/3642637
Commit-Queue: Pu Shi <pushi@google.com>
Commit-Queue: Michael Hansen <hansenmichael@google.com>
Cr-Original-Original-Commit-Position: refs/heads/main@{#1002936}
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/3651398
Cr-Original-Commit-Position: refs/branch-heads/4951@{#1259}
Cr-Original-Branched-From: 27de6227ca357da0d57ae2c7b18da170c4651438-refs/heads/main@{#982481}
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/3653768
Reviewed-by: Simon Hangl <simonha@google.com>
Owners-Override: Simon Hangl <simonha@google.com>
Commit-Queue: Zakhar Voit <voit@google.com>
Cr-Commit-Position: refs/branch-heads/4664@{#1637}
Cr-Branched-From: 24dc4ee75e01a29d390d43c9c264372a169273a7-refs/heads/main@{#929512}
---
 .../sharing/nearby/platform/scheduled_executor.cc | 15 ++++++++-------
 .../sharing/nearby/platform/scheduled_executor.h  |  5 ++++-
 2 files changed, 12 insertions(+), 8 deletions(-)

diff --git a/chrome/services/sharing/nearby/platform/scheduled_executor.cc b/chrome/services/sharing/nearby/platform/scheduled_executor.cc
index f88976ff9..a904cf302 100644
--- a/chrome/services/sharing/nearby/platform/scheduled_executor.cc
+++ b/chrome/services/sharing/nearby/platform/scheduled_executor.cc
@@ -113,12 +113,12 @@ std::shared_ptr<api::Cancelable> ScheduledExecutor::Schedule(
 
   timer_task_runner_->PostTask(
       FROM_HERE, base::BindOnce(&ScheduledExecutor::StartTimerWithId,
-                                base::Unretained(this), id,
+				timer_task_runner_weak_factory_.GetWeakPtr(), id,
                                 base::TimeDelta::FromMicroseconds(
                                     absl::ToInt64Microseconds(duration))));
 
-  return std::make_shared<CancelableTask>(
-      base::BindOnce(&TryCancelTask, weak_factory_.GetWeakPtr(), id));
+  return std::make_shared<CancelableTask>(base::BindOnce(
+      &TryCancelTask, cancelable_task_weak_factory_.GetWeakPtr(), id));
 }
 
 void ScheduledExecutor::StartTimerWithId(const base::UnguessableToken& id,
@@ -132,9 +132,10 @@ void ScheduledExecutor::StartTimerWithId(const base::UnguessableToken& id,
     return;
 
   it->second->timer.SetTaskRunner(timer_task_runner_);
-  it->second->timer.Start(FROM_HERE, delay,
-                          base::BindOnce(&ScheduledExecutor::RunTaskWithId,
-                                         base::Unretained(this), id));
+  it->second->timer.Start(
+      FROM_HERE, delay,
+      base::BindOnce(&ScheduledExecutor::RunTaskWithId,
+                     timer_task_runner_weak_factory_.GetWeakPtr(), id));
 }
 
 void ScheduledExecutor::StopTimerWithIdAndDeleteTaskEntry(
@@ -184,7 +185,7 @@ bool ScheduledExecutor::OnTaskCancelled(const base::UnguessableToken& id) {
   timer_task_runner_->PostTask(
       FROM_HERE,
       base::BindOnce(&ScheduledExecutor::StopTimerWithIdAndDeleteTaskEntry,
-                     base::Unretained(this), id));
+                     timer_task_runner_weak_factory_.GetWeakPtr(), id));
   return true;
 }
 
diff --git a/chrome/services/sharing/nearby/platform/scheduled_executor.h b/chrome/services/sharing/nearby/platform/scheduled_executor.h
index f5ef0e7db..43c728ec2 100644
--- a/chrome/services/sharing/nearby/platform/scheduled_executor.h
+++ b/chrome/services/sharing/nearby/platform/scheduled_executor.h
@@ -79,7 +79,10 @@ class ScheduledExecutor : public api::ScheduledExecutor {
   std::map<base::UnguessableToken, std::unique_ptr<PendingTaskWithTimer>>
       id_to_task_map_ GUARDED_BY(lock_);
   SEQUENCE_CHECKER(timer_sequence_checker_);
-  base::WeakPtrFactory<ScheduledExecutor> weak_factory_{this};
+  // WeakPtrFactory bound to |timer_task_runer_| to prevent use-after-free.
+  base::WeakPtrFactory<ScheduledExecutor> timer_task_runner_weak_factory_{this};
+  // WeakPtrFactory bound to Cancelable task
+  base::WeakPtrFactory<ScheduledExecutor> cancelable_task_weak_factory_{this};
 };
 
 }  // namespace chrome
-- 
2.20.1

