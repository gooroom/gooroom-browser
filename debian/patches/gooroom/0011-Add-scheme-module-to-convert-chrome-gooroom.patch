From 3387c212d5bdab54fc727b7eb504a4de976d9694 Mon Sep 17 00:00:00 2001
From: junsungc <junsungc@gooroom.kr>
Date: Thu, 23 Jul 2020 15:01:01 +0900
Subject: [PATCH 11/85] Add scheme module to convert (chrome://->gooroom://)

---
 chrome/browser/extensions/extension_web_ui.cc |  9 ++++
 gooroom/BUILD.gn                              |  4 ++
 gooroom/URLRewrite/gooroom_url_rewrite.cc     | 34 +++++++++++++++
 gooroom/URLRewrite/gooroom_url_rewrite.h      | 43 +++++++++++++++++++
 4 files changed, 90 insertions(+)
 create mode 100644 gooroom/URLRewrite/gooroom_url_rewrite.cc
 create mode 100644 gooroom/URLRewrite/gooroom_url_rewrite.h

diff --git a/chrome/browser/extensions/extension_web_ui.cc b/chrome/browser/extensions/extension_web_ui.cc
index 0a4332a9827e..1e9e75ebb64d 100644
--- a/chrome/browser/extensions/extension_web_ui.cc
+++ b/chrome/browser/extensions/extension_web_ui.cc
@@ -433,8 +433,13 @@ void ExtensionWebUI::RegisterProfilePrefs(
 bool ExtensionWebUI::HandleChromeURLOverride(
     GURL* url,
     content::BrowserContext* browser_context) {
+#if defined(GOOROOM_BUILD)
+  if (!url->SchemeIs(content::kGooroomUIScheme))
+    return false;
+#else
   if (!url->SchemeIs(content::kChromeUIScheme))
     return false;
+#endif
 
   std::vector<GURL> overrides =
       GetOverridesForChromeURL(*url, browser_context, /*get_all=*/false);
@@ -474,7 +479,11 @@ bool ExtensionWebUI::HandleChromeURLOverrideReverse(
         continue;
       if (base::StartsWith(url->spec(), override,
                            base::CompareCase::SENSITIVE)) {
+#if defined(GOOROOM_BUILD)
+        GURL original_url(content::kGooroomUIScheme + std::string("://") +
+#else
         GURL original_url(content::kChromeUIScheme + std::string("://") +
+#endif
                           dict_iter.key() +
                           url->spec().substr(override.length()));
         *url = original_url;
diff --git a/gooroom/BUILD.gn b/gooroom/BUILD.gn
index 54491f6cb1bb..8e77c4ec6aa4 100644
--- a/gooroom/BUILD.gn
+++ b/gooroom/BUILD.gn
@@ -236,6 +236,10 @@ if (!is_android && !is_mac) {
         "browser/gooroom_pref.h",
         "browser/gooroom_url_filter_impl.cc",
         "browser/gooroom_url_filter_impl.h", 
+
+        # for commit #14
+        "URLRewrite/gooroom_url_rewrite.cc",
+        "URLRewrite/gooroom_url_rewrite.h",
       ]
     }
   }
diff --git a/gooroom/URLRewrite/gooroom_url_rewrite.cc b/gooroom/URLRewrite/gooroom_url_rewrite.cc
new file mode 100644
index 000000000000..e73b8893d292
--- /dev/null
+++ b/gooroom/URLRewrite/gooroom_url_rewrite.cc
@@ -0,0 +1,34 @@
+#include "gooroom/URLRewrite/gooroom_url_rewrite.h"
+
+#include "base/strings/string_number_conversions.h"
+#include "chrome/browser/profiles/profile.h"
+#include "components/prefs/pref_service.h"
+#include "content/public/browser/browser_url_handler.h"
+#include "content/public/browser/web_contents.h"
+#include "content/public/common/url_constants.h"
+#include "ui/base/l10n/l10n_util.h"
+
+bool HandleGooroomURLRewrite(GURL* url,
+                             content::BrowserContext* browser_context) {
+  // change "gooroom://*" to "chrome://*"
+  if (!url->SchemeIs(content::kGooroomUIScheme))
+    return false;
+
+  GURL::Replacements replacements;
+  replacements.SetSchemeStr(content::kChromeUIScheme);
+  *url = url->ReplaceComponents(replacements);
+
+  return false;
+}
+
+void GooroomURLRewrite::BrowserURLHandlerCreated(
+    content::BrowserURLHandler* handler) {
+  handler->AddHandlerPair(&HandleGooroomURLRewrite,
+                          content::BrowserURLHandler::null_handler());
+}
+
+void GooroomURLRewrite::OverrideWebkitPrefs(
+    content::RenderViewHost* rvh,
+    blink::web_pref::WebPreferences* web_prefs) {
+  return;
+}
diff --git a/gooroom/URLRewrite/gooroom_url_rewrite.h b/gooroom/URLRewrite/gooroom_url_rewrite.h
new file mode 100644
index 000000000000..98d2febbe74f
--- /dev/null
+++ b/gooroom/URLRewrite/gooroom_url_rewrite.h
@@ -0,0 +1,43 @@
+/*
+ * gooroom_prefs.h
+ *
+ *  Created on: 2018. 1. 22.
+ *      Author: gooroom
+ */
+#ifndef GOOROOM_URL_REWRITE_H_
+#define GOOROOM_URL_REWRITE_H_
+
+#include <string>
+#include <vector>
+
+#include "chrome/browser/chrome_content_browser_client_parts.h"
+#include "content/common/content_export.h"
+
+namespace content {
+class BrowserContext;
+class BrowserURLHandler;
+class RenderProcessHost;
+class RenderViewHost;
+class SiteInstance;
+struct WebPreferences;
+}  // namespace content
+
+namespace storage {
+class FileSystemBackend;
+}
+
+class GURL;
+class Profile;
+
+// Implements a Gooroom specific part of ChromeContentBrowserClient.
+class GooroomURLRewrite : public ChromeContentBrowserClientParts {
+ public:
+  ~GooroomURLRewrite() override {}
+
+  void BrowserURLHandlerCreated(content::BrowserURLHandler* handler) override;
+  // ChromeContentBrowserClientParts:
+  void OverrideWebkitPrefs(content::RenderViewHost* rvh,
+                           blink::web_pref::WebPreferences* web_prefs) override;
+};
+
+#endif  // GOOROOM_URL_REWRITE_H_
-- 
2.20.1

