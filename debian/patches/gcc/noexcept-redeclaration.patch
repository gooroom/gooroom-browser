description: gcc refuses to compile methods redeclared with noexcept
author: Michael Gilbert <mgilbert@debian.org>

--- a/media/learning/common/labelled_example.cc
+++ b/media/learning/common/labelled_example.cc
@@ -21,7 +21,7 @@ LabelledExample::LabelledExample(std::in
 
 LabelledExample::LabelledExample(const LabelledExample& rhs) = default;
 
-LabelledExample::LabelledExample(LabelledExample&& rhs) noexcept = default;
+LabelledExample::LabelledExample(LabelledExample&& rhs) = default;
 
 LabelledExample::~LabelledExample() = default;
 
--- a/components/omnibox/browser/autocomplete_match.cc
+++ b/components/omnibox/browser/autocomplete_match.cc
@@ -165,7 +165,7 @@ AutocompleteMatch::AutocompleteMatch(con
       additional_info(match.additional_info),
       duplicate_matches(match.duplicate_matches) {}
 
-AutocompleteMatch::AutocompleteMatch(AutocompleteMatch&& match) noexcept =
+AutocompleteMatch::AutocompleteMatch(AutocompleteMatch&& match) =
     default;
 
 AutocompleteMatch::~AutocompleteMatch() {
--- a/cc/trees/layer_tree_host_impl.cc
+++ b/cc/trees/layer_tree_host_impl.cc
@@ -231,7 +231,7 @@ LayerTreeHostImpl::FrameData::FrameData(
 LayerTreeHostImpl::FrameData::~FrameData() = default;
 LayerTreeHostImpl::UIResourceData::UIResourceData() = default;
 LayerTreeHostImpl::UIResourceData::~UIResourceData() = default;
-LayerTreeHostImpl::UIResourceData::UIResourceData(UIResourceData&&) noexcept =
+LayerTreeHostImpl::UIResourceData::UIResourceData(UIResourceData&&) =
     default;
 LayerTreeHostImpl::UIResourceData& LayerTreeHostImpl::UIResourceData::operator=(
     UIResourceData&&) = default;
--- a/components/history/core/browser/history_types.cc
+++ b/components/history/core/browser/history_types.cc
@@ -186,7 +186,7 @@ QueryURLResult::QueryURLResult(QueryURLR
 
 QueryURLResult& QueryURLResult::operator=(const QueryURLResult&) = default;
 
-QueryURLResult& QueryURLResult::operator=(QueryURLResult&&) noexcept = default;
+QueryURLResult& QueryURLResult::operator=(QueryURLResult&&) = default;
 
 // MostVisitedURL --------------------------------------------------------------
 
--- a/components/services/storage/indexed_db/scopes/disjoint_range_lock_manager.cc
+++ b/components/services/storage/indexed_db/scopes/disjoint_range_lock_manager.cc
@@ -19,7 +19,7 @@ DisjointRangeLockManager::LockRequest::L
     : requested_type(type),
       locks_holder(std::move(locks_holder)),
       acquired_callback(std::move(acquired_callback)) {}
-DisjointRangeLockManager::LockRequest::LockRequest(LockRequest&&) noexcept =
+DisjointRangeLockManager::LockRequest::LockRequest(LockRequest&&) =
     default;
 DisjointRangeLockManager::LockRequest::~LockRequest() = default;
 DisjointRangeLockManager::Lock::Lock() = default;
