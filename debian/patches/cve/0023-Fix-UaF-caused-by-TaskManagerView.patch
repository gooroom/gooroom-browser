From 607bf1cfa7260e944b8dfa5dedc5b67b8b3d1f7c Mon Sep 17 00:00:00 2001
From: Nicolas Ouellet-Payeur <nicolaso@chromium.org>
Date: Wed, 6 Oct 2021 14:38:13 +0000
Subject: [PATCH 23/28] Fix UaF caused by TaskManagerView

TaskManagerView could stay visible even after the Profile* was
destroyed, and creating a ContextMenu tried to use its
ThemeProfileForWindow.

Make ThemeProfileForWindow reset to nullptr when the Profile* is
destoryed to avoid the use-after-free.

M90 merge issues:
  The lts branch is missing a change to allow unique_ptr as arguments
  of SetProperty:
   https://chromium-review.googlesource.com/c/chromium/src/+/3016342)
  Changed the SetProperty call on SetThemeProfileForWindow
  to use a raw pointer.

(cherry picked from commit 51ab2b4b4702040ee12288d03fbc073d766c071f)
(cherry picked from commit 112d20b81e418e216df2280c4cd99a20a095b23a)

Bug: 1229625
Change-Id: I4451df05de11fbf8fd6ffde86521a1d0e5a9f667
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/3041368
Commit-Queue: Nicolas Ouellet-Payeur <nicolaso@chromium.org>
Cr-Original-Commit-Position: refs/heads/master@{#904095}
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/3173227
Reviewed-by: Jana Grill <janagrill@google.com>
Reviewed-by: Nicolas Ouellet-Payeur <nicolaso@chromium.org>
Owners-Override: Jana Grill <janagrill@google.com>
Commit-Queue: Roger Felipe Zanoni da Silva <rzanoni@google.com>
Cr-Commit-Position: refs/branch-heads/4430@{#1637}
Cr-Branched-From: e5ce7dc4f7518237b3d9bb93cccca35d25216cbe-refs/heads/master@{#857950}
---
 chrome/browser/ui/views/theme_profile_key.cc | 38 +++++++++++++++++---
 1 file changed, 34 insertions(+), 4 deletions(-)

diff --git a/chrome/browser/ui/views/theme_profile_key.cc b/chrome/browser/ui/views/theme_profile_key.cc
index 86e94842b..77f789ec8 100644
--- a/chrome/browser/ui/views/theme_profile_key.cc
+++ b/chrome/browser/ui/views/theme_profile_key.cc
@@ -4,17 +4,47 @@
 
 #include "chrome/browser/ui/views/theme_profile_key.h"
 
+#include "base/scoped_observation.h"
+#include "chrome/browser/profiles/profile.h"
+#include "chrome/browser/profiles/profile_observer.h"
 #include "ui/aura/window.h"
 #include "ui/base/class_property.h"
 
-DEFINE_UI_CLASS_PROPERTY_TYPE(Profile*)
+namespace {
 
-DEFINE_UI_CLASS_PROPERTY_KEY(Profile*, kThemeProfileKey, nullptr)
+// A wrapper around Profile* that resets to nullptr when the Profile is
+// destroyed, much like a WeakPtr. This is not thread-safe.
+class ProfileTracker : public ProfileObserver {
+ public:
+  explicit ProfileTracker(Profile* profile) : profile_(profile) {
+    if (profile_)
+      observation_.Observe(profile_);
+  }
+  ~ProfileTracker() override = default;
+
+  void OnProfileWillBeDestroyed(Profile* profile) override {
+    observation_.Reset();
+    profile_ = nullptr;
+  }
+
+  Profile* profile() { return profile_; }
+
+ private:
+  Profile* profile_;
+  base::ScopedObservation<Profile, ProfileObserver> observation_{this};
+};
+
+}  // namespace
+
+DEFINE_UI_CLASS_PROPERTY_TYPE(ProfileTracker*)
+
+DEFINE_OWNED_UI_CLASS_PROPERTY_KEY(ProfileTracker, kThemeProfileKey, nullptr)
 
 void SetThemeProfileForWindow(aura::Window* window, Profile* profile) {
-  window->SetProperty(kThemeProfileKey, profile);
+  window->SetProperty(kThemeProfileKey, new ProfileTracker(profile));
 }
 
 Profile* GetThemeProfileForWindow(aura::Window* window) {
-  return window->GetProperty(kThemeProfileKey);
+  ProfileTracker* const tracker = window->GetProperty(kThemeProfileKey);
+  return tracker ? tracker->profile() : nullptr;
 }
-- 
2.20.1

