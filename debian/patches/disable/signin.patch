description: disable browser sign-in
origin: https://raw.githubusercontent.com/Eloston/ungoogled-chromium/master/resources/patches/ungoogled-chromium/disable-signin.patch

--- a/components/signin/internal/identity_manager/primary_account_manager.cc
+++ b/components/signin/internal/identity_manager/primary_account_manager.cc
@@ -55,9 +55,9 @@ void PrimaryAccountManager::RegisterProf
                                std::string());
   registry->RegisterStringPref(prefs::kGoogleServicesAccountId, std::string());
   registry->RegisterBooleanPref(prefs::kGoogleServicesConsentedToSync, false);
-  registry->RegisterBooleanPref(prefs::kAutologinEnabled, true);
+  registry->RegisterBooleanPref(prefs::kAutologinEnabled, false);
   registry->RegisterListPref(prefs::kReverseAutologinRejectedEmailList);
-  registry->RegisterBooleanPref(prefs::kSigninAllowed, true);
+  registry->RegisterBooleanPref(prefs::kSigninAllowed, false);
   registry->RegisterBooleanPref(prefs::kSignedInWithCredentialProvider, false);
 }
 
--- a/chrome/browser/ui/chrome_pages.cc
+++ b/chrome/browser/ui/chrome_pages.cc
@@ -474,6 +474,7 @@ GURL GetOSSettingsUrl(const std::string&
 #if !defined(OS_ANDROID) && !defined(OS_CHROMEOS)
 void ShowBrowserSignin(Browser* browser,
                        signin_metrics::AccessPoint access_point) {
+#if BUILDFLAG(ENABLE_ONE_CLICK_SIGNIN)
   Profile* original_profile = browser->profile()->GetOriginalProfile();
   DCHECK(original_profile->GetPrefs()->GetBoolean(prefs::kSigninAllowed));
 
@@ -490,6 +491,7 @@ void ShowBrowserSignin(Browser* browser,
           ? profiles::BUBBLE_VIEW_MODE_GAIA_REAUTH
           : profiles::BUBBLE_VIEW_MODE_GAIA_SIGNIN;
   browser->signin_view_controller()->ShowSignin(bubble_view_mode, access_point);
+#endif
 }
 
 void ShowBrowserSigninOrSettings(Browser* browser,
--- a/chrome/browser/ui/BUILD.gn
+++ b/chrome/browser/ui/BUILD.gn
@@ -2819,9 +2819,6 @@ static_library("ui") {
       "startup/default_browser_infobar_delegate.h",
       "startup/default_browser_prompt.cc",
       "startup/default_browser_prompt.h",
-      "sync/one_click_signin_links_delegate.h",
-      "sync/one_click_signin_links_delegate_impl.cc",
-      "sync/one_click_signin_links_delegate_impl.h",
       "user_manager.cc",
       "user_manager.h",
       "views/profiles/badged_profile_photo.cc",
@@ -4255,8 +4252,6 @@ static_library("ui") {
         "views/sync/dice_bubble_sync_promo_view.h",
         "views/sync/dice_signin_button_view.cc",
         "views/sync/dice_signin_button_view.h",
-        "views/sync/one_click_signin_dialog_view.cc",
-        "views/sync/one_click_signin_dialog_view.h",
       ]
       deps += [ "//ui/views/window/vector_icons" ]
     }
--- a/chrome/browser/ui/webui/signin/inline_login_handler_impl.cc
+++ b/chrome/browser/ui/webui/signin/inline_login_handler_impl.cc
@@ -400,6 +400,7 @@ void InlineSigninHelper::OnClientOAuthSu
     signin_metrics::LogSigninReason(
         GetSigninReasonFromHandlerSigninReason(reason));
   } else {
+#if BUILDFLAG(ENABLE_ONE_CLICK_SIGNIN)
     if (confirm_untrusted_signin_) {
       // Display a confirmation dialog to the user.
       base::RecordAction(
@@ -411,6 +412,7 @@ void InlineSigninHelper::OnClientOAuthSu
                          base::Unretained(this), result.refresh_token));
       return;
     }
+#endif
     CreateSyncStarter(result.refresh_token);
   }
   base::ThreadTaskRunnerHandle::Get()->DeleteSoon(FROM_HERE, this);
