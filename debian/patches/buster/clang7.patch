description: disable flags that are introduced after clang 7
author: Michael Gilbert <mgilbert@debian.org>

--- a/build/config/compiler/BUILD.gn
+++ b/build/config/compiler/BUILD.gn
@@ -137,8 +137,7 @@ declare_args() {
   # TODO(vitalybuka):
   # 'is_android' breaks content_shell_test_apk on android-kitkat-arm-rel.
   # 'use_xcode_clang' may call old clang.
-  init_stack_vars =
-      !is_android && !use_xcode_clang && (!is_official_build || is_linux)
+  init_stack_vars = false # for clang 7 on buster
 
   # This argument is to control whether enabling text section splitting in the
   # final binary. When enabled, the separated text sections with prefix
@@ -1511,21 +1510,6 @@ config("default_warnings") {
           # TODO(thakis): Only for no_chromium_code? http://crbug.com/912662
           "-Wno-ignored-pragma-optimize",
 
-          # TODO(https://crbug.com/989932): Evaluate and possibly enable.
-          "-Wno-implicit-int-float-conversion",
-
-          # TODO(https://crbug.com/999886): Clean up, enable.
-          "-Wno-final-dtor-non-final-class",
-
-          # TODO(https://crbug.com/1016945) Clean up, enable.
-          "-Wno-builtin-assume-aligned-alignment",
-
-          # TODO(https://crbug.com/1028110): Evaluate and possible enable.
-          "-Wno-deprecated-copy",
-
-          # TODO(https://crbug.com/1050281): Clean up, enable.
-          "-Wno-non-c-typedef-for-linkage",
-
           # TODO(https://crbug.com/1059231): Clean up, enable.
           "-Wno-pointer-to-int-cast",
         ]
@@ -1675,7 +1659,7 @@ config("no_chromium_code") {
       # suppressing them individually, we just blanket suppress them here.
       "-Wno-unused-variable",
     ]
-    if (!is_nacl && (current_toolchain == host_toolchain || !use_xcode_clang)) {
+    if (false) {
       cflags += [
         # TODO(https://crbug.com/1031169): Clean up and enable.
         "-Wno-misleading-indentation",
--- a/third_party/pffft/BUILD.gn
+++ b/third_party/pffft/BUILD.gn
@@ -24,7 +24,6 @@ config("common_config") {
 
 static_library("pffft") {
   configs += [ ":common_config" ]
-  cflags = [ "-Wno-unused-but-set-variable" ]
   sources = [
     "src/pffft.c",
     "src/pffft.h",
--- a/third_party/blink/renderer/BUILD.gn
+++ b/third_party/blink/renderer/BUILD.gn
@@ -45,11 +45,9 @@ config("inside_blink") {
       "-Wconversion",
       "-Wno-float-conversion",
       "-Wno-sign-conversion",
-      "-Wno-implicit-float-conversion",
-      "-Wno-implicit-int-conversion",
     ]
 
-    if (!is_chromeos || default_toolchain != "//build/toolchain/cros:target") {
+    if (false) {
       cflags += [ "-Wno-enum-float-conversion" ]
     }
   }
--- a/third_party/angle/BUILD.gn
+++ b/third_party/angle/BUILD.gn
@@ -137,7 +137,6 @@ config("extra_warnings") {
   if (is_clang) {
     cflags += [
       "-Wconditional-uninitialized",
-      "-Wextra-semi-stmt",
       "-Wfloat-conversion",
       "-Winconsistent-missing-destructor-override",
       "-Wmissing-field-initializers",
--- a/third_party/angle/src/compiler/preprocessor/preprocessor.l
+++ b/third_party/angle/src/compiler/preprocessor/preprocessor.l
@@ -50,7 +50,6 @@ IF YOU MODIFY THIS FILE YOU ALSO NEED TO
 #pragma clang diagnostic ignored "-Wunknown-warning-option"
 #endif
 // Flex isn't semi-colon clean.
-#pragma clang diagnostic ignored "-Wextra-semi-stmt"
 #pragma clang diagnostic ignored "-Wunreachable-code"
 #endif
 
--- a/third_party/angle/src/compiler/translator/glslang.l
+++ b/third_party/angle/src/compiler/translator/glslang.l
@@ -46,7 +46,6 @@ WHICH GENERATES THE GLSL ES LEXER (glsla
 #pragma clang diagnostic ignored "-Wunknown-warning-option"
 #endif
 // Flex isn't semi-colon clean.
-#pragma clang diagnostic ignored "-Wextra-semi-stmt"
 #pragma clang diagnostic ignored "-Wunreachable-code"
 #endif
 }
--- a/third_party/angle/src/compiler/preprocessor/preprocessor_lex_autogen.cpp
+++ b/third_party/angle/src/compiler/preprocessor/preprocessor_lex_autogen.cpp
@@ -708,7 +708,6 @@ IF YOU MODIFY THIS FILE YOU ALSO NEED TO
 #        pragma clang diagnostic ignored "-Wunknown-warning-option"
 #    endif
 // Flex isn't semi-colon clean.
-#    pragma clang diagnostic ignored "-Wextra-semi-stmt"
 #    pragma clang diagnostic ignored "-Wunreachable-code"
 #endif
 
--- a/third_party/angle/src/compiler/translator/glslang_lex_autogen.cpp
+++ b/third_party/angle/src/compiler/translator/glslang_lex_autogen.cpp
@@ -31,7 +31,6 @@
 #        pragma clang diagnostic ignored "-Wunknown-warning-option"
 #    endif
 // Flex isn't semi-colon clean.
-#    pragma clang diagnostic ignored "-Wextra-semi-stmt"
 #    pragma clang diagnostic ignored "-Wunreachable-code"
 #endif
 
